---
topology:
  - name: router
    replicasets_count: <<replicasets_count>>        # How many masters we want, by default equal 1
    replication_factor: <<replication_factor>>      # Number of replicas in replicaset, default 0
    roles: [ router, failover-coordinator ]
    weight: <<weight>>                              # Vshard replicaset weight (matters only if `vshard-storage` role is enabled)
    cartridge_extra_env:                            # Environment variables for instance service (systemd service)
      REMOTE_SERVER: db1.pg.svc.cluster.local
      REMOTE_USER: user
      REMOTE_PASSWORD: password
    config:                                         # Config with arbitrary key-values pairs
      http_port: <<http_start_port>>                # Specify http port to start counting from
      binary_port: <<binary_start_port>>            # Specify binary port to start counting from
      all_rw: false                                 # A flag indicating that all servers in the replicaset should be read-write
      zone: server-1                                # Zone parameter for ansible cartridge playbook
      vshard_group:                                 # Vshard group for vshard-storage
      additional_config:                            # Additional parameters to be added to the host config
        server_url: foo.bar.baz
    vars:                                           # Ansible wars to be added to hosts
      ansible_user: user
      ansible_password: password
  - name: storage
    replicasets_count: <<replicasets_count>>        # How many masters we want, by default equal 1
    replication_factor: <<replication_factor>>      # Number of replicas in replicaset, default 0
    roles: [ storage ]
hosts:
  - name: datacenter-1
    config:
      http_port: <<http_start_port>>                # Specify http port to start counting from
      binary_port: <<binary_start_port>>            # Specify binary port to start counting from
    hosts:
      - name: server-1
        config:
          http_port: <<http_start_port>>            # Specify http port to start counting from
          binary_port: <<binary_start_port>>        # Specify binary port to start counting from
          address: <<host_address>>                 # Host or instance address (maybe IP or URI)
      - name: server-2
        config:
          address: <<host_address>>                 # Host or instance address (maybe IP or URI)
failover:
  mode: stateful                                    # Failover mode (stateful, eventual, disabled, raft)
  state_provider: stateboard                        # What is serve failover (stateboard, stateful)
  stateboard_params:
    uri: <<host_address_and_port>>                 # Uri on which the stateboard will be available (ip:port)
    password: <<stateboard_password>>               # Stateboard password
vars:
  ansible_user: <<ansible_user>>                    # Username under which the ansible will connect to the servers
  ansible_password: <<ansible_password>>            # Ansible's user password
  cartridge_app_name: <<application_name>>
  cartridge_cluster_cookie: <<cookie>>              # Cookie for connecting to the administrative console of the instances
  cartridge_package_path: <<absolute_path>>         # Path to the application package
  cartridge_bootstrap_vshard: true
