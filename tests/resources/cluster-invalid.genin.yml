---
# List of replicasets as an array
topology:
    # How many masters we want, by default equal 1
  - replicasets_count: "2"
    # Array of roles for this instance
    roles:
      - router
      - failover-coordinator
  - name: [ "storage" ]
    # How many masters we want, by default equal 1
    replicasets_count: 2
    # Number of replicas in replicaset, default 0
    replication_factor: "tree"
    # Array of roles for this instance
    roles:
      storage: true
      failover-coordinator: false
# List of regions, datacenters, and servers
hosts:
  - name: datacenter-1
    # Config with arbitrary key-values pairs
    config:
      # Specify http port to start counting from
      http_port: 506023
      # Specify binary port to start counting from
      binary_port: "3031"
    # List of regions, datacenters, and servers
    hosts:
      - name: server-1
        # Config with arbitrary key-values pairs
        config:
          # Specify http port to start counting from
          http_port: 
            - 8081
            - 8082
          # Specify binary port to start counting from
          binary_port: 3031
          # Host or instance address (maybe IP or URI)
          address: 192.168.16.11
      - name: server-2
        # Config with arbitrary key-values pairs
        config:
          # Specify http port to start counting from
          http_port: 8081
          # Specify binary port to start counting from
          binary_port: 3031
          # Host or instance address (maybe IP or URI)
          address: ~
        # Config with arbitrary key-values pairs
      - config:
          # Specify http port to start counting from
          http_port: 8081
          # Specify binary port to start counting from
          binary_port: 3031
          # Host or instance address (maybe IP or URI)
          address: 1000
          # Additional parameters to be added to the host config
          additional_config: 
            - HOST: localhost
            - PORT: 3000
# Failover management options
failover:
  # Failover mode (stateful, eventual, disabled)
  mode: stateful
  # What is serve failover (stateboard, stateful)
  state_provider: stateboard
  # Params for chosen in state_provider failover type
  stateboard_params:
    # Uri on which the stateboard will be available
    uri: "192.168.16.11"
    # Stateboard password
    password: 123
# Vars similar to those configured in the cartridge inventory
vars:
  # Username under which the ansible will connect to the servers
  ansible_user: ansible
  # Ansible user password
  ansible_password: 123
  # Application name
  cartridge_app_name: myapp
  # Cookie for connecting to the administrative console of the instances
  cartridge_cluster_cookie: myapp-cookie
  # Path to the application package
  cartridge_package_path: /tmp/myapp.rpm
  # Indicates if vshard must be bootstrapped on the cluster
  cartridge_bootstrap_vshard: "true"
