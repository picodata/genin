name: Release
on:
  workflow_call:
    inputs:
      VERSION:
        required: true
        type: string
    secrets:
      RAW_AUTH_RW:
        description: 'A RAW_AUTH_RW passed from UnitTest'
        required: true
      GITLAB_BUILDER:
        description: 'A GITLAB_BUILDER passed from Release'
        required: true
env:
  VERSION: ${{ inputs.version }}
  RAW_REGISTRY: https://binary.picodata.io/repository/raw
jobs:
  build:
    name: Build genin binary
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/rust-builder-stable:latest
    steps:
      - uses: actions/checkout@v3
      - name: Run make build_binary
        run: |
          make build_musl
      - name: Archive musl binary
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
          path: target/x86_64-unknown-linux-musl/release/genin

  musl-bin:
    name: Upload musl binary
    needs: [build]
    runs-on: [self-hosted, genin]
    container:
      image: docker.binary.picodata.io/rockylinux:8
    steps:
      - name: Download builded binary
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl.zip
          path: .
      - name: Upload archive with binary
        run: |
          tar -czvf genin-${{ env.VERSION }}-x86_64-musl.tar.gz genin
          curl -v -f -H "Authorization: Basic ${{ secrets.RAW_AUTH_RW }}" --upload-file genin-${{ env.VERSION }}-x86_64-musl.tar.gz ${{ env.RAW_REGISTRY }}/genin/bin/genin-${{ env.VERSION }}-x86_64-musl.tar.gz
      - uses: actions/checkout@v3
      - name: Clean workspace
        run: rm -rf * .[^.]*
        if: always()

  clean:
    runs-on: self-hosted
    needs: [musl-bin]
    steps:
      - uses: AutoModality/action-clean@v1
      - run: echo cleaned workdir

  release:
    name: Create new release
    runs-on: [ self-hosted, genin ]
    steps:
      - name: Create genin Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: genin v${{ env.VERSION }}
          body: |
            ---
            - [genin v${{ env.VERSION }}](#genin-v${{ env.VERSION }})
              * [executable](#executable)
              * [MacOSX](#macosx)
            
            ### Executable
            [genin-${{ env.VERSION }}-x86_64-musl.tar.gz](${{ env.RAW_REGISTRY }}/genin/bin/genin-${{ env.VERSION }}-x86_64-musl.tar.gz)
            
            ### MacOSX
            [genin-${{ env.VERSION }}-x86_64-macos.tar.gz](${{ env.RAW_REGISTRY }}/genin/osx/genin-${{ env.VERSION }}-x86_64-macosx.tar.gz)

            ### For other OS, use the Picodata repository: 
            [genin-${{ env.VERSION }}](https://picodata.io/download/)            

  call_gitlab_ci:
    name: Trigger_gitlab
    secrets:
      GITLAB_BUILDER: ${{ secrets.GITLAB_BUILDER }}
    uses: ./.github/workflows/Curl.yaml

